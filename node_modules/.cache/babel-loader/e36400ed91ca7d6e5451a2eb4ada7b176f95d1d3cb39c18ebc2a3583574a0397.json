{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\echra\\\\OneDrive\\\\Bureau\\\\react_projects\\\\Movie_Application\\\\movie_app\\\\src\\\\Components\\\\TvShows.jsx\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport React, { Fragment, useEffect, useState, useContext } from 'react';\nimport { AiFillPlayCircle } from 'react-icons/ai';\nimport no_image from './no-image-available-icon-flat-vector-no-image-available-icon-flat-vector-illustration-132482953.jpg';\nimport '../Styles/Videos.css';\nimport { Container } from './NavBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Tv_shows() {\n  _s();\n  const [trailer, setTrailer] = useState(true);\n  const {\n    toggle,\n    inputValue\n  } = useContext(Container);\n  const input = inputValue;\n  const [showData, setShowsData] = useState([]);\n  const Shown = input ? 'search' : 'discover';\n  const Images = \"https://image.tmdb.org/t/p/w500\";\n  const Api = `https://api.themoviedb.org/3/${Shown}/tv`;\n  const TvShows = async () => {\n    const data = await axios.get(Api, {\n      params: {\n        api_key: '97e50f91f39a8298c4d9603b9462060d',\n        query: input\n      }\n    });\n    const results = data.data.results;\n    setShowsData(results);\n  };\n  useEffect(() => {\n    TvShows();\n  }, [input]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: toggle ? \"mainBgColor\" : \"secondaryBgColor\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movies-container\",\n        children: showsData.map(Show => {\n          return /*#__PURE__*/_jsxDEV(Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              id: trailer ? 'container' : \"NoContainer\",\n              children: [/*#__PURE__*/_jsxDEV(AiFillPlayCircle, {\n                color: \"#ee0077\",\n                fontSize: 40,\n                id: \"playIcon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: Show.poster_path ? `${Images}${Show.poster_path}` : no_image,\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                id: Show.name.length > 28 ? \"smaller-Text\" : \"\",\n                className: toggle ? \"DarkTheme\" : \"LightThemeClose\",\n                children: Show.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 11\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(Tv_shows, \"l+4V4akBETO4aJbHefmkqN+L6d4=\");\n_c = Tv_shows;\nexport default Tv_shows;\nvar _c;\n$RefreshReg$(_c, \"Tv_shows\");","map":{"version":3,"names":["axios","React","Fragment","useEffect","useState","useContext","AiFillPlayCircle","no_image","Container","Tv_shows","trailer","setTrailer","toggle","inputValue","input","showData","setShowsData","Shown","Images","Api","TvShows","data","get","params","api_key","query","results","showsData","map","Show","poster_path","name","length"],"sources":["C:/Users/echra/OneDrive/Bureau/react_projects/Movie_Application/movie_app/src/Components/TvShows.jsx"],"sourcesContent":["import axios from 'axios'\r\nimport React, { Fragment, useEffect, useState ,useContext} from 'react'\r\nimport { AiFillPlayCircle } from 'react-icons/ai'\r\nimport no_image from './no-image-available-icon-flat-vector-no-image-available-icon-flat-vector-illustration-132482953.jpg'\r\nimport '../Styles/Videos.css'\r\nimport { Container } from './NavBar'\r\nfunction Tv_shows() {\r\n  \r\n  const [trailer,setTrailer]=useState(true)\r\n  const {toggle,inputValue}=useContext(Container)\r\n   const input=inputValue\r\n  const [showData, setShowsData] = useState([])\r\n  const Shown =input ? 'search':'discover'\r\n  const Images = \"https://image.tmdb.org/t/p/w500\"\r\n  const Api = `https://api.themoviedb.org/3/${Shown}/tv`\r\n  const TvShows = async () => {\r\n    const data = await axios.get(Api, {\r\n      params: {\r\n        api_key: '97e50f91f39a8298c4d9603b9462060d',\r\n        query:input\r\n      }\r\n    })\r\n    const results = data.data.results\r\n    setShowsData(results)\r\n  }\r\n  useEffect(() => {\r\n    TvShows()\r\n  },[input])\r\n  return (\r\n   \r\n    <Fragment>\r\n   \r\n      <div className={toggle? \"mainBgColor\" : \"secondaryBgColor\"}>\r\n        <div className='movies-container'>\r\n      {showsData.map((Show) => {\r\n        return (\r\n          <Fragment>\r\n            \r\n            <div id={trailer ? 'container':\"NoContainer\"}>\r\n              <AiFillPlayCircle color='#ee0077' fontSize={40} id='playIcon' />\r\n              <img src={Show.poster_path ? `${Images}${Show.poster_path}`: no_image} alt='' />\r\n              <h3 id={Show.name.length>28 ? \"smaller-Text\" :\"\"}\r\n              className={toggle? \"DarkTheme\":\"LightThemeClose\"}>{Show.name}</h3>\r\n            </div>\r\n          </Fragment>\r\n          )\r\n          })}\r\n          </div>\r\n          </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Tv_shows"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,UAAU,QAAO,OAAO;AACvE,SAASC,gBAAgB,QAAQ,gBAAgB;AACjD,OAAOC,QAAQ,MAAM,sGAAsG;AAC3H,OAAO,sBAAsB;AAC7B,SAASC,SAAS,QAAQ,UAAU;AAAA;AACpC,SAASC,QAAQ,GAAG;EAAA;EAElB,MAAM,CAACC,OAAO,EAACC,UAAU,CAAC,GAACP,QAAQ,CAAC,IAAI,CAAC;EACzC,MAAM;IAACQ,MAAM;IAACC;EAAU,CAAC,GAACR,UAAU,CAACG,SAAS,CAAC;EAC9C,MAAMM,KAAK,GAACD,UAAU;EACvB,MAAM,CAACE,QAAQ,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC7C,MAAMa,KAAK,GAAEH,KAAK,GAAG,QAAQ,GAAC,UAAU;EACxC,MAAMI,MAAM,GAAG,iCAAiC;EAChD,MAAMC,GAAG,GAAI,gCAA+BF,KAAM,KAAI;EACtD,MAAMG,OAAO,GAAG,YAAY;IAC1B,MAAMC,IAAI,GAAG,MAAMrB,KAAK,CAACsB,GAAG,CAACH,GAAG,EAAE;MAChCI,MAAM,EAAE;QACNC,OAAO,EAAE,kCAAkC;QAC3CC,KAAK,EAACX;MACR;IACF,CAAC,CAAC;IACF,MAAMY,OAAO,GAAGL,IAAI,CAACA,IAAI,CAACK,OAAO;IACjCV,YAAY,CAACU,OAAO,CAAC;EACvB,CAAC;EACDvB,SAAS,CAAC,MAAM;IACdiB,OAAO,EAAE;EACX,CAAC,EAAC,CAACN,KAAK,CAAC,CAAC;EACV,oBAEE,QAAC,QAAQ;IAAA,uBAEP;MAAK,SAAS,EAAEF,MAAM,GAAE,aAAa,GAAG,kBAAmB;MAAA,uBACzD;QAAK,SAAS,EAAC,kBAAkB;QAAA,UAClCe,SAAS,CAACC,GAAG,CAAEC,IAAI,IAAK;UACvB,oBACE,QAAC,QAAQ;YAAA,uBAEP;cAAK,EAAE,EAAEnB,OAAO,GAAG,WAAW,GAAC,aAAc;cAAA,wBAC3C,QAAC,gBAAgB;gBAAC,KAAK,EAAC,SAAS;gBAAC,QAAQ,EAAE,EAAG;gBAAC,EAAE,EAAC;cAAU;gBAAA;gBAAA;gBAAA;cAAA,QAAG,eAChE;gBAAK,GAAG,EAAEmB,IAAI,CAACC,WAAW,GAAI,GAAEZ,MAAO,GAAEW,IAAI,CAACC,WAAY,EAAC,GAAEvB,QAAS;gBAAC,GAAG,EAAC;cAAE;gBAAA;gBAAA;gBAAA;cAAA,QAAG,eAChF;gBAAI,EAAE,EAAEsB,IAAI,CAACE,IAAI,CAACC,MAAM,GAAC,EAAE,GAAG,cAAc,GAAE,EAAG;gBACjD,SAAS,EAAEpB,MAAM,GAAE,WAAW,GAAC,iBAAkB;gBAAA,UAAEiB,IAAI,CAACE;cAAI;gBAAA;gBAAA;gBAAA;cAAA,QAAM;YAAA;cAAA;cAAA;cAAA;YAAA;UAC9D;YAAA;YAAA;YAAA;UAAA,QACG;QAEX,CAAC;MAAC;QAAA;QAAA;QAAA;MAAA;IACI;MAAA;MAAA;MAAA;IAAA;EACA;IAAA;IAAA;IAAA;EAAA,QACD;AAEf;AAAC,GA7CQtB,QAAQ;AAAA,KAARA,QAAQ;AA+CjB,eAAeA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}