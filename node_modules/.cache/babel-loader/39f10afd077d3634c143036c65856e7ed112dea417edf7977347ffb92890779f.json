{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\echra\\\\OneDrive\\\\Bureau\\\\react_projects\\\\Movie_Application\\\\movie_app\\\\src\\\\trailers\\\\TrailerMovies.jsx\",\n  _s = $RefreshSig$();\n/*import React, { Fragment } from 'react'\r\nimport { useState ,useEffect } from 'react';\r\nimport ReactPlayer from 'react-player';\r\nimport movieTrailer from \"movie-trailer\";\r\nimport '../Styles/TrailerMovi.css'\r\nfunction TrailerMovies ({moviesTitle}) {\r\nconst [video, setVideo] = useState(\"\");\r\nconst [videoURL, setVideoURL] =useState(\"https://www.youtube.com/watch?v=_A-O22Eezac&t=9903s\");\r\n\r\nfunction handleSearch() {\r\n  setVideo(moviesTitle)\r\n    movieTrailer(video).then((res) => {\r\n    setVideoURL(res);\r\n    });\r\n  }\r\n  /*console.log(videoURL)\r\n  useEffect(() =>{handleSearch()},[videoURL])\r\n  return (\r\n    \r\n    <Fragment>\r\n      \r\n        <div className='Container'></div>\r\n        <div className='player'>\r\n    <ReactPlayer url={videoURL} controls={true} width=\"700px\" height={\"400px\"} muted={false} playIcon={true}/>\r\n    </div>\r\n    </Fragment>\r\n\r\n  )\r\n}\r\n\r\nexport default TrailerMovies*/\nimport axios from 'axios';\nimport React, { useState, useEffect } from \"react\";\nimport YouTube from \"react-youtube\";\nimport movieTrailer from \"movie-trailer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\nfunction Row(_ref) {\n  _s();\n  let {\n    title,\n    fetchURL,\n    isLargeRow\n  } = _ref;\n  const [movies, setMovies] = useState([]);\n  const [trailerURL, setTrailerURL] = useState(\"\");\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(fetchURL);\n      console.log(request.data.results);\n      setMovies(request.data.results);\n      return request;\n    }\n    fetchData();\n  }, [fetchURL]);\n  const opts = {\n    height: \"390\",\n    width: \"100%\",\n    playerVars: {\n      autoplay: 1\n    }\n  };\n  const handleClick = movie => {\n    if (trailerURL) {\n      setTrailerURL(\"\");\n    } else {\n      movieTrailer((movie === null || movie === void 0 ? void 0 : movie.name) || (movie === null || movie === void 0 ? void 0 : movie.title) || (movie === null || movie === void 0 ? void 0 : movie.original_title) || \"\").then(url => {\n        const urlParams = new URLSearchParams(new URL(url).search);\n        setTrailerURL(urlParams.get(\"v\"));\n      }).catch(error => console.log(error));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row__posters\",\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"img\", {\n        onClick: () => handleClick(movie),\n        className: `row__poster ${isLargeRow && \"row__posterLarge\"}`,\n        src: `${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`,\n        alt: movie.name\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), trailerURL && /*#__PURE__*/_jsxDEV(YouTube, {\n      videoId: trailerURL,\n      opts: opts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n_s(Row, \"El1rNDxgae4Ska+KIjJJpKJIUDM=\");\n_c = Row;\nexport default Row;\nvar _c;\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"names":["axios","React","useState","useEffect","YouTube","movieTrailer","base_url","Row","title","fetchURL","isLargeRow","movies","setMovies","trailerURL","setTrailerURL","fetchData","request","get","console","log","data","results","opts","height","width","playerVars","autoplay","handleClick","movie","name","original_title","then","url","urlParams","URLSearchParams","URL","search","catch","error","map","poster_path","backdrop_path","id"],"sources":["C:/Users/echra/OneDrive/Bureau/react_projects/Movie_Application/movie_app/src/trailers/TrailerMovies.jsx"],"sourcesContent":["/*import React, { Fragment } from 'react'\r\nimport { useState ,useEffect } from 'react';\r\nimport ReactPlayer from 'react-player';\r\nimport movieTrailer from \"movie-trailer\";\r\nimport '../Styles/TrailerMovi.css'\r\nfunction TrailerMovies ({moviesTitle}) {\r\nconst [video, setVideo] = useState(\"\");\r\nconst [videoURL, setVideoURL] =useState(\"https://www.youtube.com/watch?v=_A-O22Eezac&t=9903s\");\r\n\r\nfunction handleSearch() {\r\n  setVideo(moviesTitle)\r\n    movieTrailer(video).then((res) => {\r\n    setVideoURL(res);\r\n    });\r\n  }\r\n  /*console.log(videoURL)\r\n  useEffect(() =>{handleSearch()},[videoURL])\r\n  return (\r\n    \r\n    <Fragment>\r\n      \r\n        <div className='Container'></div>\r\n        <div className='player'>\r\n    <ReactPlayer url={videoURL} controls={true} width=\"700px\" height={\"400px\"} muted={false} playIcon={true}/>\r\n    </div>\r\n    </Fragment>\r\n\r\n  )\r\n}\r\n\r\nexport default TrailerMovies*/\r\nimport axios from 'axios'\r\nimport React, { useState, useEffect } from \"react\";\r\nimport YouTube from \"react-youtube\";\r\nimport movieTrailer from \"movie-trailer\"\r\n\r\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\r\n\r\nfunction Row({ title, fetchURL, isLargeRow }) {\r\n  const [movies, setMovies] = useState([]);\r\n  const [trailerURL, setTrailerURL] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await axios.get(fetchURL);\r\n      console.log(request.data.results);\r\n      setMovies(request.data.results);\r\n      return request;\r\n    }\r\n    fetchData();\r\n  }, [fetchURL]);\r\n\r\n  const opts = {\r\n    height: \"390\",\r\n    width: \"100%\",\r\n    playerVars: {\r\n      autoplay: 1,\r\n    },\r\n  };\r\n\r\n  const handleClick = (movie) => {\r\n    if (trailerURL) {\r\n      setTrailerURL(\"\");\r\n    } else {\r\n      movieTrailer(movie?.name || movie?.title || movie?.original_title || \"\")\r\n        .then((url) => {\r\n          const urlParams = new URLSearchParams(new URL(url).search);\r\n          setTrailerURL(urlParams.get(\"v\"));\r\n        })\r\n        .catch((error) => console.log(error));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='row'>\r\n      <h2>{title}</h2>\r\n      <div className='row__posters'>\r\n        {movies.map((movie) => (\r\n          <img\r\n            key={movie.id}\r\n            onClick={() => handleClick(movie)}\r\n            className={`row__poster ${isLargeRow && \"row__posterLarge\"}`}\r\n            src={`${base_url}${\r\n              isLargeRow ? movie.poster_path : movie.backdrop_path\r\n            }`}\r\n            alt={movie.name}\r\n          />\r\n        ))}\r\n      </div>\r\n      {trailerURL && <YouTube videoId={trailerURL} opts={opts} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Row;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}