[{"C:\\Users\\echra\\OneDrive\\Bureau\\react_projects\\Movie_Application\\movie_app\\src\\index.js":"1","C:\\Users\\echra\\OneDrive\\Bureau\\react_projects\\Movie_Application\\movie_app\\src\\App.js":"2","C:\\Users\\echra\\OneDrive\\Bureau\\react_projects\\Movie_Application\\movie_app\\src\\Components\\NavBar.jsx":"3","C:\\Users\\echra\\OneDrive\\Bureau\\react_projects\\Movie_Application\\movie_app\\src\\Components\\movies.jsx":"4","C:\\Users\\echra\\OneDrive\\Bureau\\react_projects\\Movie_Application\\movie_app\\src\\Components\\Movies.jsx":"5","C:\\Users\\echra\\OneDrive\\Bureau\\react_projects\\Movie_Application\\movie_app\\src\\Components\\TvShows.jsx":"6","C:\\Users\\echra\\OneDrive\\Bureau\\react_projects\\Movie_Application\\movie_app\\src\\Components\\Pricing.jsx":"7","C:\\Users\\echra\\OneDrive\\Bureau\\react_projects\\Movie_Application\\movie_app\\src\\Components\\Trendings.jsx":"8","C:\\Users\\echra\\OneDrive\\Bureau\\react_projects\\Movie_Application\\movie_app\\src\\trailers\\TrailerMovies.jsx":"9","C:\\Users\\echra\\OneDrive\\Bureau\\react_projects\\Movie_Application\\movie_app\\src\\Components\\test.jsx":"10","C:\\Users\\echra\\OneDrive\\Bureau\\react_projects\\Movie_Application\\movie_app\\src\\trailers\\TrailerTvShows.jsx":"11","C:\\Users\\echra\\OneDrive\\Bureau\\react_projects\\Movie_Application\\movie_app\\src\\trailers\\TrailerTrendings.jsx":"12"},{"size":343,"mtime":1671580183397,"results":"13","hashOfConfig":"14"},{"size":156,"mtime":1671572517572,"results":"15","hashOfConfig":"14"},{"size":2058,"mtime":1674135548891,"results":"16","hashOfConfig":"14"},{"size":1239,"mtime":1671640382609,"results":"17","hashOfConfig":"14"},{"size":2566,"mtime":1674142566119,"results":"18","hashOfConfig":"14"},{"size":2435,"mtime":1674077400836,"results":"19","hashOfConfig":"14"},{"size":3716,"mtime":1674132416486,"results":"20","hashOfConfig":"14"},{"size":2427,"mtime":1674076979705,"results":"21","hashOfConfig":"14"},{"size":967,"mtime":1674075711153,"results":"22","hashOfConfig":"14"},{"size":1242,"mtime":1671920768642,"results":"23","hashOfConfig":"14"},{"size":982,"mtime":1674075989306,"results":"24","hashOfConfig":"14"},{"size":978,"mtime":1674075684012,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"d9p6pm",{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"29"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},"C:\\Users\\echra\\OneDrive\\Bureau\\react_projects\\Movie_Application\\movie_app\\src\\index.js",[],[],[],"C:\\Users\\echra\\OneDrive\\Bureau\\react_projects\\Movie_Application\\movie_app\\src\\App.js",[],[],"C:\\Users\\echra\\OneDrive\\Bureau\\react_projects\\Movie_Application\\movie_app\\src\\Components\\NavBar.jsx",[],[],"C:\\Users\\echra\\OneDrive\\Bureau\\react_projects\\Movie_Application\\movie_app\\src\\Components\\movies.jsx",[],[],"C:\\Users\\echra\\OneDrive\\Bureau\\react_projects\\Movie_Application\\movie_app\\src\\Components\\Movies.jsx",["70"],[],"import axios from 'axios'\r\nimport React, { Fragment, useEffect, useState ,useContext} from 'react'\r\nimport { AiFillPlayCircle } from 'react-icons/ai'\r\nimport { AiOutlineClose } from 'react-icons/ai'\r\nimport no_image from './no-image-available-icon-flat-vector-no-image-available-icon-flat-vector-illustration-132482953.jpg'\r\nimport '../Styles/Videos.css'\r\nimport { Container } from './NavBar'\r\nimport TrailerMovies from '../trailers/TrailerMovies'\r\nimport '../Styles/TrailerMovi.css'\r\n\r\nfunction Movies() {\r\n  const[movieTitle,setMovieTitle]=useState(\"\")\r\n  const [trailer,setTrailer]=useState(true)\r\n  const {toggle,inputValue}=useContext(Container)\r\n   const input=inputValue\r\n  const [moviesData, setMoviesData] = useState([])\r\n  const Shown =input ? 'search':'discover'\r\n  const Images = \"https://image.tmdb.org/t/p/w500\"\r\n  const Api = `https://api.themoviedb.org/3/${Shown}/movie`\r\n  const MovieCall = async () => {\r\n    const data = await axios.get(Api, {\r\n      params: {\r\n        api_key: '97e50f91f39a8298c4d9603b9462060d',\r\n        query:input\r\n      }\r\n    })\r\n    const results = data.data.results\r\n    setMoviesData(results)\r\n  }\r\n  useEffect(() => {\r\n    setTimeout(()=>{\r\n      MovieCall()\r\n    },100)\r\n    \r\n  },[input])\r\n  const MoviesTitle=(movie)=>{\r\n    setMovieTitle(movie.title)\r\n    setTrailer(!trailer)}\r\n  return (\r\n  //  <Test></Test>\r\n    <Fragment>\r\n   \r\n      <div className={toggle? \"mainBgColor\" : \"secondaryBgColor\"}>\r\n        <div className='movies-container'>\r\n      {moviesData.map((movie) => {\r\n        return (\r\n          <Fragment>\r\n            <div id={trailer ? 'container':\"NoContainer\"}>\r\n              <addFavouriteMovie></addFavouriteMovie>\r\n              <AiFillPlayCircle color='#ee0077' fontSize={40} id={ trailer? 'playIcon':\"hide\"}onClick={()=>MoviesTitle(movie)}  />\r\n              <img  src={movie.poster_path ? `${Images}${movie.poster_path}`: no_image} alt=''onClick={()=>MoviesTitle(movie)} />\r\n              <h3 id={movie.title.length>28 ? \"smaller-Text\" :\"\"}\r\n              className={toggle? \"DarkTheme\":\"LightThemeClose\"}>{movie.title}</h3>\r\n            </div>\r\n          </Fragment>\r\n          )\r\n          })}\r\n          {trailer ? console.log : <TrailerMovies moviesTitle={movieTitle} toggle={toggle}/>}\r\n          <AiOutlineClose id={trailer? \"Nothing\":\"Exit1\"} className={toggle? \"#DarkTheme\":\"LightThemeClose\"} onClick={()=>setTrailer(true)} cursor={'pointer'}\r\n          color='#ee0077' fontSize={45}/>\r\n          </div>\r\n          </div>\r\n          \r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Movies","C:\\Users\\echra\\OneDrive\\Bureau\\react_projects\\Movie_Application\\movie_app\\src\\Components\\TvShows.jsx",["71"],[],"import axios from 'axios'\r\nimport React, { Fragment, useEffect, useState ,useContext} from 'react'\r\nimport { AiFillPlayCircle } from 'react-icons/ai'\r\nimport { AiOutlineClose } from 'react-icons/ai'\r\nimport no_image from './no-image-available-icon-flat-vector-no-image-available-icon-flat-vector-illustration-132482953.jpg'\r\nimport '../Styles/Videos.css'\r\nimport { Container } from './NavBar'\r\nimport TrailerTvShows from \"../trailers/TrailerTvShows\"\r\nfunction Tvshows() {\r\n  const [trailer,setTrailer]=useState(true)\r\n  const {toggle,inputValue}=useContext(Container)\r\n   const input=inputValue\r\n   const[title,setTitle]=useState(\"\")\r\n  const [showData, setShowsData] = useState([])\r\n  const Shown =input ? 'search':'discover'\r\n  const Images = \"https://image.tmdb.org/t/p/w500\"\r\n  const Api = `https://api.themoviedb.org/3/${Shown}/tv`\r\n  const TvShows = async () => {\r\n    const data = await axios.get(Api, {\r\n      params: {\r\n        api_key: '97e50f91f39a8298c4d9603b9462060d',\r\n        query:input\r\n      }\r\n    })\r\n    const results = data.data.results\r\n    setShowsData(results)\r\n  }\r\n  useEffect(() => {\r\n    setTimeout(()=>{\r\n      TvShows()\r\n    },100 )\r\n  },[input])\r\n  const TvShowTitle=(shows)=>{\r\nsetTitle(shows.name)\r\nsetTrailer(!trailer)\r\n  }\r\n  return (\r\n   \r\n    <Fragment>\r\n   \r\n      <div className={toggle? \"mainBgColor\" : \"secondaryBgColor\"} >\r\n        <div className='movies-container'>\r\n      {showData.map((shows) => {\r\n        return (\r\n          <Fragment key={shows.id}>\r\n             <div id={trailer ? 'container':\"NoContainer\"}>\r\n              <AiFillPlayCircle color='#ee0077' fontSize={40} id={ trailer? 'playIcon':\"hide\"} onClick={()=>TvShowTitle(shows)} />\r\n              <img src={shows.poster_path ? `${Images}${shows.poster_path}`: no_image} alt=''  onClick={()=>TvShowTitle(shows)}/>\r\n              <h3 id={shows.name.length>28 ? \"smaller-Text\" :\"\"}\r\n              className={toggle? \"DarkTheme\":\"LightThemeClose\"}>{shows.name}</h3>\r\n            </div>\r\n          </Fragment>\r\n          )\r\n          })}\r\n           {trailer ? console.log : <TrailerTvShows TvShowTitle={title} toggle={toggle}/>}\r\n         \r\n          <AiOutlineClose id={trailer? \"Nothing\":\"Exit1\"} className={toggle? \"#DarkTheme\":\"LightThemeClose\"} onClick={()=>setTrailer(true)} cursor={'pointer'}\r\n          color='#ee0077' fontSize={55}/>\r\n          </div>\r\n          </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Tvshows","C:\\Users\\echra\\OneDrive\\Bureau\\react_projects\\Movie_Application\\movie_app\\src\\Components\\Pricing.jsx",[],[],"C:\\Users\\echra\\OneDrive\\Bureau\\react_projects\\Movie_Application\\movie_app\\src\\Components\\Trendings.jsx",["72"],[],"import axios from 'axios'\r\nimport React, { Fragment, useEffect, useState ,useContext} from 'react'\r\nimport { AiFillPlayCircle ,AiOutlineClose } from 'react-icons/ai'\r\nimport no_image from './no-image-available-icon-flat-vector-no-image-available-icon-flat-vector-illustration-132482953.jpg'\r\nimport '../Styles/Videos.css'\r\nimport { Container } from './NavBar'\r\nimport TrailerTrendings from '../trailers/TrailerTrendings'\r\nfunction Trendings() {\r\n  const[trendTitle,setTrendTitle]=useState(\"\")\r\n  const [trailer,setTrailer]=useState(true)\r\n  const {toggle,inputValue}=useContext(Container)\r\n  const input=inputValue\r\n  const [trendArray, setTrendArray] = useState([])\r\n  const TrendsShown ='/trending/all/day'\r\n  const Images = \"https://image.tmdb.org/t/p/w500\"\r\n  const Api = `https://api.themoviedb.org/3`\r\n  const Trends = async () => {\r\n    const data = await axios.get(`${Api}${TrendsShown}`, {\r\n      params: {\r\n        api_key: '97e50f91f39a8298c4d9603b9462060d',\r\n       \r\n      \r\n      }\r\n    })\r\n    const results = data.data.results\r\n    setTrendArray(results) \r\n    console.log(results)\r\n  }\r\n \r\n  useEffect(() => {\r\n    Trends()\r\n  },[input])\r\n  const TrendTitle=(trend)=>{\r\n    setTrendTitle(trend.title ? trend.title: trend.name)\r\n    setTrailer(!trailer)\r\n  }\r\n  return (\r\n   \r\n    <Fragment>\r\n      <div className={toggle? \"mainBgColor\" : \"secondaryBgColor\"}>\r\n        <div className='movies-container'>\r\n      {trendArray.map((trend) => {\r\n        return (\r\n         \r\n       \r\n        <Fragment>\r\n            <div id={trailer ? 'container':\"NoContainer\"}>\r\n               <AiFillPlayCircle color='#ee0077' fontSize={40} id={ trailer? 'playIcon':\"hide\"} onClick={()=>TrendTitle(trend)}  />\r\n             \r\n              <img src={trend.poster_path ? `${Images}${trend.poster_path}`: no_image} alt=''  onClick={()=>TrendTitle(trend)}/>\r\n               <h3 className={toggle? \"DarkTheme\":\"LightThemeClose\"}>{trend.title ? trend.title: trend.name}</h3> \r\n            </div>\r\n          </Fragment>\r\n          )\r\n          })}\r\n          {trailer ? console.log : <TrailerTrendings Trendtitle={trendTitle} toggle={toggle}/>}\r\n          <AiOutlineClose id={trailer? \"Nothing\":\"Exit1\"} className={toggle? \"#DarkTheme\":\"LightThemeClose\"} onClick={()=>setTrailer(true)} cursor={'pointer'}\r\n          color='#ee0077' fontSize={55}/>\r\n          </div>\r\n          </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Trendings","C:\\Users\\echra\\OneDrive\\Bureau\\react_projects\\Movie_Application\\movie_app\\src\\trailers\\TrailerMovies.jsx",["73"],[],"import React, { Fragment } from 'react'\r\nimport { useState ,useEffect } from 'react';\r\nimport ReactPlayer from 'react-player';\r\nimport movieTrailer from \"movie-trailer\";\r\nimport '../Styles/TrailerMovi.css'\r\nfunction TrailerMovies ({moviesTitle,toggle}) {\r\nconst [video, setVideo] = useState(\"\");\r\nconst [videoURL, setVideoURL] =useState(\"https://www.youtube.com/watch?v=_A-O22Eezac&t=9903s\");\r\n\r\nfunction handleSearch() {\r\n  setVideo(moviesTitle)\r\n    movieTrailer(video).then((res) => {\r\n    setVideoURL(res);\r\n    });\r\n  }\r\n \r\n  useEffect(() =>{handleSearch()},[videoURL])\r\n  return (\r\n    \r\n    <Fragment>\r\n        <div className='Container'></div>\r\n        <div className='player'>\r\n          <h1 id={toggle ? \"TrailerMovie-name-dark\":\"TrailerMovie-name-light\"}>{moviesTitle}</h1>\r\n    <ReactPlayer url={videoURL} controls={true} width=\"700px\" height={\"400px\"} muted={false} playIcon={true}/>\r\n    </div>\r\n    </Fragment>\r\n\r\n  )\r\n}\r\n\r\nexport default TrailerMovies","C:\\Users\\echra\\OneDrive\\Bureau\\react_projects\\Movie_Application\\movie_app\\src\\Components\\test.jsx",["74"],[],"import { useState } from 'react';\r\nimport ReactPlayer from 'react-player';\r\nimport movieTrailer from 'movie-trailer';\r\n   \r\nfunction Test() {\r\n   \r\n  //Setting up the initial states using\r\n  // react hook 'useState\"\r\n  const [video, setVideo] = useState(\"inception\");\r\n  const [videoURL, setVideoURL] = \r\n    useState(\"http://youtu.be/sa9l-dTv9Gk\");\r\n   \r\n  //A function to fetch the required URL\r\n  // and storing it inside the\r\n  // videoURL state variable\r\n  function handleSearch() {\r\n    movieTrailer(video).then((res) => {\r\n      setVideoURL(res);\r\n    });\r\n  }\r\n   \r\n  return (\r\n    <div >\r\n      <div >\r\n        <label>\r\n            Search for any movies/shows:{ \" \" }\r\n        </label>\r\n        <input type=\"text\" onChange=\r\n            {(e) => { setVideo(e.target.value) }} />\r\n  \r\n        <button onClick={()=>{handleSearch()}}>\r\n            Search\r\n        </button>\r\n      </div>\r\n  \r\n      // Using 'ReactPlayer' component to\r\n      // display the video\r\n      <ReactPlayer url={videoURL} controls={true}/>\r\n    </div>\r\n  );\r\n}\r\n   \r\nexport default Test;","C:\\Users\\echra\\OneDrive\\Bureau\\react_projects\\Movie_Application\\movie_app\\src\\trailers\\TrailerTvShows.jsx",["75"],[],"import React, { Fragment } from 'react'\r\nimport { useState ,useEffect } from 'react';\r\nimport ReactPlayer from 'react-player';\r\nimport movieTrailer from \"movie-trailer\";\r\nimport '../Styles/TrailerMovi.css'\r\n\r\nfunction TrailerTvShows ({TvShowTitle,toggle}) {\r\nconst [video, setVideo] = useState(\"\");\r\nconst [videoURL, setVideoURL] =useState(\"https://www.youtube.com/watch?v=_A-O22Eezac&t=9903s\");\r\n\r\nfunction handleSearch() {\r\n  setVideo(TvShowTitle)\r\n    movieTrailer(video).then((res) => {\r\n    setVideoURL(res);\r\n    });\r\n  }\r\n \r\n  useEffect(() =>{handleSearch()},[videoURL])\r\n  return (\r\n    \r\n    <Fragment>\r\n      \r\n        <div className='Container'></div>\r\n        <div className='player'>\r\n        <h1 id={toggle ? \"TrailerMovie-name-dark\":\"TrailerMovie-name-light\"}>{TvShowTitle}</h1>\r\n   \r\n    <ReactPlayer url={videoURL} controls={true} width=\"700px\" height={\"400px\"} muted={false} playIcon={true}/>\r\n    </div>\r\n    </Fragment>\r\n\r\n  )\r\n}\r\n\r\nexport default TrailerTvShows","C:\\Users\\echra\\OneDrive\\Bureau\\react_projects\\Movie_Application\\movie_app\\src\\trailers\\TrailerTrendings.jsx",["76"],[],"import React, { Fragment } from 'react'\r\nimport { useState ,useEffect } from 'react';\r\nimport ReactPlayer from 'react-player';\r\nimport movieTrailer from \"movie-trailer\";\r\nimport '../Styles/TrailerMovi.css'\r\n\r\nfunction TrailerTrendings ({Trendtitle,toggle}) {\r\nconst [video, setVideo] = useState(\"\");\r\nconst [videoURL, setVideoURL] =useState(\"https://www.youtube.com/watch?v=_A-O22Eezac&t=9903s\");\r\n\r\nfunction handleSearch() {\r\n  setVideo(Trendtitle)\r\n    movieTrailer(video).then((res) => {\r\n    setVideoURL(res);\r\n    });\r\n  }\r\n \r\n  useEffect(() =>{handleSearch()},[videoURL])\r\n  return (\r\n    \r\n    <Fragment>\r\n      \r\n        <div className='Container'></div>\r\n        <div className='player'>\r\n        <h1 id={toggle ? \"TrailerMovie-name-dark\":\"TrailerMovie-name-light\"}>{Trendtitle}</h1>\r\n    <ReactPlayer url={videoURL} controls={true} width=\"700px\" height={\"400px\"} muted={false} playIcon={true}/>\r\n    </div>\r\n    </Fragment>\r\n\r\n  )\r\n}\r\n\r\nexport default TrailerTrendings",{"ruleId":"77","severity":1,"message":"78","line":35,"column":5,"nodeType":"79","endLine":35,"endColumn":12,"suggestions":"80"},{"ruleId":"77","severity":1,"message":"81","line":32,"column":5,"nodeType":"79","endLine":32,"endColumn":12,"suggestions":"82"},{"ruleId":"77","severity":1,"message":"83","line":32,"column":5,"nodeType":"79","endLine":32,"endColumn":12,"suggestions":"84"},{"ruleId":"77","severity":1,"message":"85","line":17,"column":35,"nodeType":"79","endLine":17,"endColumn":45,"suggestions":"86"},{"ruleId":"87","severity":1,"message":"88","line":34,"column":13,"nodeType":"89","messageId":"90","endLine":38,"endColumn":7},{"ruleId":"77","severity":1,"message":"85","line":18,"column":35,"nodeType":"79","endLine":18,"endColumn":45,"suggestions":"91"},{"ruleId":"77","severity":1,"message":"85","line":18,"column":35,"nodeType":"79","endLine":18,"endColumn":45,"suggestions":"92"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'MovieCall'. Either include it or remove the dependency array.","ArrayExpression",["93"],"React Hook useEffect has a missing dependency: 'TvShows'. Either include it or remove the dependency array.",["94"],"React Hook useEffect has a missing dependency: 'Trends'. Either include it or remove the dependency array.",["95"],"React Hook useEffect has a missing dependency: 'handleSearch'. Either include it or remove the dependency array.",["96"],"react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","JSXText","putCommentInBraces",["97"],["98"],{"desc":"99","fix":"100"},{"desc":"101","fix":"102"},{"desc":"103","fix":"104"},{"desc":"105","fix":"106"},{"desc":"105","fix":"107"},{"desc":"105","fix":"108"},"Update the dependencies array to be: [MovieCall, input]",{"range":"109","text":"110"},"Update the dependencies array to be: [TvShows, input]",{"range":"111","text":"112"},"Update the dependencies array to be: [Trends, input]",{"range":"113","text":"114"},"Update the dependencies array to be: [handleSearch, videoURL]",{"range":"115","text":"116"},{"range":"117","text":"116"},{"range":"118","text":"116"},[1229,1236],"[MovieCall, input]",[1169,1176],"[TvShows, input]",[1146,1153],"[Trends, input]",[563,573],"[handleSearch, videoURL]",[566,576],[566,576]]